Nonterminals useless in grammar

    defs
    defn


Terminals unused in grammar

    "return"
    "else"
    "def"
    "->"
    ","


Rules useless in grammar

   36 defs: defn
   37     | defs defn

   38 defn: "def" NAME "(" ")" ":" EOLN nest


State 35 conflicts: 11 shift/reduce
State 58 conflicts: 6 shift/reduce
State 59 conflicts: 11 shift/reduce
State 60 conflicts: 11 shift/reduce
State 61 conflicts: 11 shift/reduce
State 62 conflicts: 11 shift/reduce
State 63 conflicts: 11 shift/reduce
State 64 conflicts: 6 shift/reduce
State 65 conflicts: 6 shift/reduce
State 66 conflicts: 6 shift/reduce
State 67 conflicts: 6 shift/reduce


Grammar

    0 $accept: main EOFL

    1 main: prgm

    2 prgm: blck

    3 nest: INDT blck DEDT

    4 blck: stms

    5 stms: stms stmt
    6     | stmt

    7 stmt: NAME "=" expn EOLN
    8     | NAME "+=" expn EOLN
    9     | "if" expn ":" EOLN nest
   10     | "while" expn ":" EOLN nest
   11     | NAME "-=" expn EOLN
   12     | "pass" EOLN
   13     | "print" "(" expn ")" EOLN

   14 expn: expn "+" expn
   15     | expn "-" expn
   16     | expn "and" expn
   17     | expn "<" expn
   18     | expn "<=" expn
   19     | expn "==" expn
   20     | "not" expn
   21     | expn "or" expn
   22     | expn "*" expn
   23     | expn "//" expn
   24     | expn "%" expn
   25     | NMBR
   26     | STRG
   27     | "True"
   28     | "False"
   29     | "None"
   30     | "input" "(" expn ")"
   31     | "int" "(" expn ")"
   32     | "str" "(" expn ")"
   33     | NAME
   34     | "(" expn ")"
   35     | expn ":" EOLN


Terminals, with rules where they appear

    EOFL (0) 0
    error (256)
    EOLN (258) 7 8 9 10 11 12 13 35
    INDT (259) 3
    DEDT (260) 3
    "pass" (261) 12
    "print" (262) 13
    "input" (263) 30
    "int" (264) 31
    "str" (265) 32
    "=" (266) 7
    "+" (267) 14
    "<" (268) 17
    "<=" (269) 18
    "==" (270) 19
    "not" (271) 20
    "if" (272) 9
    "return" (273)
    "else" (274)
    "while" (275) 10
    "def" (276)
    "+=" (277) 8
    "-=" (278) 11
    "and" (279) 16
    "or" (280) 21
    "-" (281) 15
    "*" (282) 22
    "//" (283) 23
    "%" (284) 24
    "(" (285) 13 30 31 32 34
    "->" (286)
    ")" (287) 13 30 31 32 34
    "," (288)
    ":" (289) 9 10 35
    "None" (290) 29
    "True" (291) 27
    "False" (292) 28
    NMBR <int> (293) 25
    NAME <std::string> (294) 7 8 11 33
    STRG <std::string> (295) 26


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    main (42)
        on left: 1
        on right: 0
    prgm <Prgm_ptr> (43)
        on left: 2
        on right: 1
    nest <Blck_ptr> (44)
        on left: 3
        on right: 9 10
    blck <Blck_ptr> (45)
        on left: 4
        on right: 2 3
    stms <Stmt_vec> (46)
        on left: 5 6
        on right: 4 5
    stmt <Stmt_ptr> (47)
        on left: 7 8 9 10 11 12 13
        on right: 5 6
    expn <Expn_ptr> (48)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
        on right: 7 8 9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 30 31 32 34 35


State 0

    0 $accept: . main EOFL

    "pass"   shift, and go to state 1
    "print"  shift, and go to state 2
    "if"     shift, and go to state 3
    "while"  shift, and go to state 4
    NAME     shift, and go to state 5

    main  go to state 6
    prgm  go to state 7
    blck  go to state 8
    stms  go to state 9
    stmt  go to state 10


State 1

   12 stmt: "pass" . EOLN

    EOLN  shift, and go to state 11


State 2

   13 stmt: "print" . "(" expn ")" EOLN

    "("  shift, and go to state 12


State 3

    9 stmt: "if" . expn ":" EOLN nest

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 24


State 4

   10 stmt: "while" . expn ":" EOLN nest

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 25


State 5

    7 stmt: NAME . "=" expn EOLN
    8     | NAME . "+=" expn EOLN
   11     | NAME . "-=" expn EOLN

    "="   shift, and go to state 26
    "+="  shift, and go to state 27
    "-="  shift, and go to state 28


State 6

    0 $accept: main . EOFL

    EOFL  shift, and go to state 29


State 7

    1 main: prgm .

    $default  reduce using rule 1 (main)


State 8

    2 prgm: blck .

    $default  reduce using rule 2 (prgm)


State 9

    4 blck: stms .
    5 stms: stms . stmt

    "pass"   shift, and go to state 1
    "print"  shift, and go to state 2
    "if"     shift, and go to state 3
    "while"  shift, and go to state 4
    NAME     shift, and go to state 5

    $default  reduce using rule 4 (blck)

    stmt  go to state 30


State 10

    6 stms: stmt .

    $default  reduce using rule 6 (stms)


State 11

   12 stmt: "pass" EOLN .

    $default  reduce using rule 12 (stmt)


State 12

   13 stmt: "print" "(" . expn ")" EOLN

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 31


State 13

   30 expn: "input" . "(" expn ")"

    "("  shift, and go to state 32


State 14

   31 expn: "int" . "(" expn ")"

    "("  shift, and go to state 33


State 15

   32 expn: "str" . "(" expn ")"

    "("  shift, and go to state 34


State 16

   20 expn: "not" . expn

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 35


State 17

   34 expn: "(" . expn ")"

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 36


State 18

   29 expn: "None" .

    $default  reduce using rule 29 (expn)


State 19

   27 expn: "True" .

    $default  reduce using rule 27 (expn)


State 20

   28 expn: "False" .

    $default  reduce using rule 28 (expn)


State 21

   25 expn: NMBR .

    $default  reduce using rule 25 (expn)


State 22

   33 expn: NAME .

    $default  reduce using rule 33 (expn)


State 23

   26 expn: STRG .

    $default  reduce using rule 26 (expn)


State 24

    9 stmt: "if" expn . ":" EOLN nest
   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ":"    shift, and go to state 47


State 25

   10 stmt: "while" expn . ":" EOLN nest
   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ":"    shift, and go to state 48


State 26

    7 stmt: NAME "=" . expn EOLN

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 49


State 27

    8 stmt: NAME "+=" . expn EOLN

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 50


State 28

   11 stmt: NAME "-=" . expn EOLN

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 51


State 29

    0 $accept: main EOFL .

    $default  accept


State 30

    5 stms: stms stmt .

    $default  reduce using rule 5 (stms)


State 31

   13 stmt: "print" "(" expn . ")" EOLN
   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ")"    shift, and go to state 52
    ":"    shift, and go to state 53


State 32

   30 expn: "input" "(" . expn ")"

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 54


State 33

   31 expn: "int" "(" . expn ")"

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 55


State 34

   32 expn: "str" "(" . expn ")"

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 56


State 35

   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   20     | "not" expn .
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ":"    shift, and go to state 53

    "+"       [reduce using rule 20 (expn)]
    "<"       [reduce using rule 20 (expn)]
    "<="      [reduce using rule 20 (expn)]
    "=="      [reduce using rule 20 (expn)]
    "and"     [reduce using rule 20 (expn)]
    "or"      [reduce using rule 20 (expn)]
    "-"       [reduce using rule 20 (expn)]
    "*"       [reduce using rule 20 (expn)]
    "//"      [reduce using rule 20 (expn)]
    "%"       [reduce using rule 20 (expn)]
    ":"       [reduce using rule 20 (expn)]
    $default  reduce using rule 20 (expn)


State 36

   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   34     | "(" expn . ")"
   35     | expn . ":" EOLN

    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ")"    shift, and go to state 57
    ":"    shift, and go to state 53


State 37

   14 expn: expn "+" . expn

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 58


State 38

   17 expn: expn "<" . expn

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 59


State 39

   18 expn: expn "<=" . expn

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 60


State 40

   19 expn: expn "==" . expn

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 61


State 41

   16 expn: expn "and" . expn

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 62


State 42

   21 expn: expn "or" . expn

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 63


State 43

   15 expn: expn "-" . expn

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 64


State 44

   22 expn: expn "*" . expn

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 65


State 45

   23 expn: expn "//" . expn

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 66


State 46

   24 expn: expn "%" . expn

    "input"  shift, and go to state 13
    "int"    shift, and go to state 14
    "str"    shift, and go to state 15
    "not"    shift, and go to state 16
    "("      shift, and go to state 17
    "None"   shift, and go to state 18
    "True"   shift, and go to state 19
    "False"  shift, and go to state 20
    NMBR     shift, and go to state 21
    NAME     shift, and go to state 22
    STRG     shift, and go to state 23

    expn  go to state 67


State 47

    9 stmt: "if" expn ":" . EOLN nest
   35 expn: expn ":" . EOLN

    EOLN  shift, and go to state 68


State 48

   10 stmt: "while" expn ":" . EOLN nest
   35 expn: expn ":" . EOLN

    EOLN  shift, and go to state 69


State 49

    7 stmt: NAME "=" expn . EOLN
   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    EOLN   shift, and go to state 70
    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ":"    shift, and go to state 53


State 50

    8 stmt: NAME "+=" expn . EOLN
   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    EOLN   shift, and go to state 71
    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ":"    shift, and go to state 53


State 51

   11 stmt: NAME "-=" expn . EOLN
   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    EOLN   shift, and go to state 72
    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ":"    shift, and go to state 53


State 52

   13 stmt: "print" "(" expn ")" . EOLN

    EOLN  shift, and go to state 73


State 53

   35 expn: expn ":" . EOLN

    EOLN  shift, and go to state 74


State 54

   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   30     | "input" "(" expn . ")"
   35     | expn . ":" EOLN

    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ")"    shift, and go to state 75
    ":"    shift, and go to state 53


State 55

   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   31     | "int" "(" expn . ")"
   35     | expn . ":" EOLN

    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ")"    shift, and go to state 76
    ":"    shift, and go to state 53


State 56

   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   32     | "str" "(" expn . ")"
   35     | expn . ":" EOLN

    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ")"    shift, and go to state 77
    ":"    shift, and go to state 53


State 57

   34 expn: "(" expn ")" .

    $default  reduce using rule 34 (expn)


State 58

   14 expn: expn . "+" expn
   14     | expn "+" expn .
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ":"    shift, and go to state 53

    "<"       [reduce using rule 14 (expn)]
    "<="      [reduce using rule 14 (expn)]
    "=="      [reduce using rule 14 (expn)]
    "and"     [reduce using rule 14 (expn)]
    "or"      [reduce using rule 14 (expn)]
    ":"       [reduce using rule 14 (expn)]
    $default  reduce using rule 14 (expn)


State 59

   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   17     | expn "<" expn .
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ":"    shift, and go to state 53

    "+"       [reduce using rule 17 (expn)]
    "<"       [reduce using rule 17 (expn)]
    "<="      [reduce using rule 17 (expn)]
    "=="      [reduce using rule 17 (expn)]
    "and"     [reduce using rule 17 (expn)]
    "or"      [reduce using rule 17 (expn)]
    "-"       [reduce using rule 17 (expn)]
    "*"       [reduce using rule 17 (expn)]
    "//"      [reduce using rule 17 (expn)]
    "%"       [reduce using rule 17 (expn)]
    ":"       [reduce using rule 17 (expn)]
    $default  reduce using rule 17 (expn)


State 60

   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   18     | expn "<=" expn .
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ":"    shift, and go to state 53

    "+"       [reduce using rule 18 (expn)]
    "<"       [reduce using rule 18 (expn)]
    "<="      [reduce using rule 18 (expn)]
    "=="      [reduce using rule 18 (expn)]
    "and"     [reduce using rule 18 (expn)]
    "or"      [reduce using rule 18 (expn)]
    "-"       [reduce using rule 18 (expn)]
    "*"       [reduce using rule 18 (expn)]
    "//"      [reduce using rule 18 (expn)]
    "%"       [reduce using rule 18 (expn)]
    ":"       [reduce using rule 18 (expn)]
    $default  reduce using rule 18 (expn)


State 61

   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   19     | expn "==" expn .
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ":"    shift, and go to state 53

    "+"       [reduce using rule 19 (expn)]
    "<"       [reduce using rule 19 (expn)]
    "<="      [reduce using rule 19 (expn)]
    "=="      [reduce using rule 19 (expn)]
    "and"     [reduce using rule 19 (expn)]
    "or"      [reduce using rule 19 (expn)]
    "-"       [reduce using rule 19 (expn)]
    "*"       [reduce using rule 19 (expn)]
    "//"      [reduce using rule 19 (expn)]
    "%"       [reduce using rule 19 (expn)]
    ":"       [reduce using rule 19 (expn)]
    $default  reduce using rule 19 (expn)


State 62

   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   16     | expn "and" expn .
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ":"    shift, and go to state 53

    "+"       [reduce using rule 16 (expn)]
    "<"       [reduce using rule 16 (expn)]
    "<="      [reduce using rule 16 (expn)]
    "=="      [reduce using rule 16 (expn)]
    "and"     [reduce using rule 16 (expn)]
    "or"      [reduce using rule 16 (expn)]
    "-"       [reduce using rule 16 (expn)]
    "*"       [reduce using rule 16 (expn)]
    "//"      [reduce using rule 16 (expn)]
    "%"       [reduce using rule 16 (expn)]
    ":"       [reduce using rule 16 (expn)]
    $default  reduce using rule 16 (expn)


State 63

   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   21     | expn "or" expn .
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    "+"    shift, and go to state 37
    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "-"    shift, and go to state 43
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ":"    shift, and go to state 53

    "+"       [reduce using rule 21 (expn)]
    "<"       [reduce using rule 21 (expn)]
    "<="      [reduce using rule 21 (expn)]
    "=="      [reduce using rule 21 (expn)]
    "and"     [reduce using rule 21 (expn)]
    "or"      [reduce using rule 21 (expn)]
    "-"       [reduce using rule 21 (expn)]
    "*"       [reduce using rule 21 (expn)]
    "//"      [reduce using rule 21 (expn)]
    "%"       [reduce using rule 21 (expn)]
    ":"       [reduce using rule 21 (expn)]
    $default  reduce using rule 21 (expn)


State 64

   14 expn: expn . "+" expn
   15     | expn . "-" expn
   15     | expn "-" expn .
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    "*"    shift, and go to state 44
    "//"   shift, and go to state 45
    "%"    shift, and go to state 46
    ":"    shift, and go to state 53

    "<"       [reduce using rule 15 (expn)]
    "<="      [reduce using rule 15 (expn)]
    "=="      [reduce using rule 15 (expn)]
    "and"     [reduce using rule 15 (expn)]
    "or"      [reduce using rule 15 (expn)]
    ":"       [reduce using rule 15 (expn)]
    $default  reduce using rule 15 (expn)


State 65

   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   22     | expn "*" expn .
   23     | expn . "//" expn
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    ":"    shift, and go to state 53

    "<"       [reduce using rule 22 (expn)]
    "<="      [reduce using rule 22 (expn)]
    "=="      [reduce using rule 22 (expn)]
    "and"     [reduce using rule 22 (expn)]
    "or"      [reduce using rule 22 (expn)]
    ":"       [reduce using rule 22 (expn)]
    $default  reduce using rule 22 (expn)


State 66

   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   23     | expn "//" expn .
   24     | expn . "%" expn
   35     | expn . ":" EOLN

    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    ":"    shift, and go to state 53

    "<"       [reduce using rule 23 (expn)]
    "<="      [reduce using rule 23 (expn)]
    "=="      [reduce using rule 23 (expn)]
    "and"     [reduce using rule 23 (expn)]
    "or"      [reduce using rule 23 (expn)]
    ":"       [reduce using rule 23 (expn)]
    $default  reduce using rule 23 (expn)


State 67

   14 expn: expn . "+" expn
   15     | expn . "-" expn
   16     | expn . "and" expn
   17     | expn . "<" expn
   18     | expn . "<=" expn
   19     | expn . "==" expn
   21     | expn . "or" expn
   22     | expn . "*" expn
   23     | expn . "//" expn
   24     | expn . "%" expn
   24     | expn "%" expn .
   35     | expn . ":" EOLN

    "<"    shift, and go to state 38
    "<="   shift, and go to state 39
    "=="   shift, and go to state 40
    "and"  shift, and go to state 41
    "or"   shift, and go to state 42
    ":"    shift, and go to state 53

    "<"       [reduce using rule 24 (expn)]
    "<="      [reduce using rule 24 (expn)]
    "=="      [reduce using rule 24 (expn)]
    "and"     [reduce using rule 24 (expn)]
    "or"      [reduce using rule 24 (expn)]
    ":"       [reduce using rule 24 (expn)]
    $default  reduce using rule 24 (expn)


State 68

    9 stmt: "if" expn ":" EOLN . nest
   35 expn: expn ":" EOLN .

    INDT  shift, and go to state 78

    $default  reduce using rule 35 (expn)

    nest  go to state 79


State 69

   10 stmt: "while" expn ":" EOLN . nest
   35 expn: expn ":" EOLN .

    INDT  shift, and go to state 78

    $default  reduce using rule 35 (expn)

    nest  go to state 80


State 70

    7 stmt: NAME "=" expn EOLN .

    $default  reduce using rule 7 (stmt)


State 71

    8 stmt: NAME "+=" expn EOLN .

    $default  reduce using rule 8 (stmt)


State 72

   11 stmt: NAME "-=" expn EOLN .

    $default  reduce using rule 11 (stmt)


State 73

   13 stmt: "print" "(" expn ")" EOLN .

    $default  reduce using rule 13 (stmt)


State 74

   35 expn: expn ":" EOLN .

    $default  reduce using rule 35 (expn)


State 75

   30 expn: "input" "(" expn ")" .

    $default  reduce using rule 30 (expn)


State 76

   31 expn: "int" "(" expn ")" .

    $default  reduce using rule 31 (expn)


State 77

   32 expn: "str" "(" expn ")" .

    $default  reduce using rule 32 (expn)


State 78

    3 nest: INDT . blck DEDT

    "pass"   shift, and go to state 1
    "print"  shift, and go to state 2
    "if"     shift, and go to state 3
    "while"  shift, and go to state 4
    NAME     shift, and go to state 5

    blck  go to state 81
    stms  go to state 9
    stmt  go to state 10


State 79

    9 stmt: "if" expn ":" EOLN nest .

    $default  reduce using rule 9 (stmt)


State 80

   10 stmt: "while" expn ":" EOLN nest .

    $default  reduce using rule 10 (stmt)


State 81

    3 nest: INDT blck . DEDT

    DEDT  shift, and go to state 82


State 82

    3 nest: INDT blck DEDT .

    $default  reduce using rule 3 (nest)
